{"version":3,"file":"static/js/709.ad5332c4.chunk.js","mappings":"kKACA,G,QAA0B,0BAA1B,EAAkE,8BAAlE,EAAyG,wBAAzG,EAA4I,0BAA5I,EAAgL,yBAAhL,EAAkN,wBAAlN,EAAiP,sB,mBCSjP,EAPmB,SAACA,GAChB,OACIC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAS,IAAIA,EAASC,UAClCH,EAAAA,EAAAA,KAACI,EAAAA,GAAO,CAACC,GAAI,YAAaN,EAAMO,GAAGL,UAAW,SAAAM,GAAU,OAAAA,EAARC,SAAwBN,EAAWA,CAAM,EAAEC,SAAEJ,EAAMU,QAG/G,ECAA,EAPe,SAACV,GACZ,OACIC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAUC,SACrBJ,EAAMW,SAGnB,E,iDC4BMC,GAAYC,EAAAA,EAAAA,GAAiB,IAa7BC,GAAqBC,EAAAA,EAAAA,GAAU,CACjCC,KAAK,wBADkBD,EAZN,SAACf,GAClB,OACCiB,EAAAA,EAAAA,MAAA,QAAMC,SAAUlB,EAAMmB,aAAaf,SAAA,EAChCH,EAAAA,EAAAA,KAAA,OAAAG,UACIH,EAAAA,EAAAA,KAACmB,EAAAA,EAAK,CAACC,UAAWC,EAAAA,EAAUC,SAAU,CAACC,EAAAA,EAASZ,GAAcF,KAAM,iBAAkBe,YAAa,0BAEvGxB,EAAAA,EAAAA,KAAA,OAAAG,UACIH,EAAAA,EAAAA,KAAA,UAAAG,SAAQ,aAGpB,IAKA,EA5CgB,SAACJ,GACb,IAAI0B,EAAO1B,EAAM2B,YACbC,EAAiBF,EAAMG,QAAQC,KAAI,SAAAC,GAAM,OACzC9B,EAAAA,EAAAA,KAAC+B,EAAU,CAACtB,KAAMqB,EAAOrB,KAAMH,GAAIwB,EAAOxB,IAASwB,EAAOxB,GAAK,IAC/D0B,EAAmBP,EAAMQ,SAASJ,KAAI,SAAAnB,GAAO,OAC7CV,EAAAA,EAAAA,KAACkC,EAAO,CAACxB,QAASA,EAAQA,SAAcA,EAAQJ,GAAK,IAErCmB,EAAMU,eAM1B,OAAIpC,EAAMqC,QAGNpB,EAAAA,EAAAA,MAAA,OAAKf,UAAWC,EAAUC,SAAA,EACtBH,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAeC,SAC1BwB,KAELX,EAAAA,EAAAA,MAAA,OAAKf,UAAWC,EAAWC,SAAA,EACvBH,EAAAA,EAAAA,KAAA,OAAAG,SAAM6B,KACNhC,EAAAA,EAAAA,KAACa,EAAmB,CAACI,SAdf,SAACoB,GACftC,EAAMuC,WAAWD,EAAOF,eAE5B,WAEyBnC,EAAAA,EAAAA,KAACuC,EAAAA,GAAQ,CAAClC,GAAI,UAc3C,E,oBChBA,GAAemC,E,QAAAA,KACXC,EAAAA,EAAAA,KAbiB,SAAChB,GAClB,MAAM,CACFC,YAAaD,EAAMC,YAE3B,IACyB,SAACgB,GACtB,MAAO,CACHJ,WAAW,SAACH,GACRO,GAASC,EAAAA,EAAAA,GAAwBR,GAAgB,EAE7D,IAIIS,EAAAA,EAFJ,CAGEC,E","sources":["webpack://new-app/./src/components/Dialogs/DIalogs.module.css?7e3e","components/Dialogs/DialogItem/DialogItem.js","components/Dialogs/Message/Message.js","components/Dialogs/Dialogs.js","components/Dialogs/DialogsConteiner.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"DIalogs_dialogs__55ywm\",\"dialogsItems\":\"DIalogs_dialogsItems__W+R8C\",\"dialog\":\"DIalogs_dialog__1r0AX\",\"messages\":\"DIalogs_messages__fQmYc\",\"message\":\"DIalogs_message__7r81b\",\"active\":\"DIalogs_active__GGICR\",\"item\":\"DIalogs_item__k6xTo\"};","import s from '../DIalogs.module.css'\nimport {NavLink} from \"react-router-dom\";\n\nconst DialogItem = (props)=>{\n    return(\n        <div className={s.dialog+' '+s.active}>\n            <NavLink to={'/dialogs/'+ props.id}className={({isActive}) =>isActive ? s.active : s.item }>{props.name}</NavLink>\n        </div>\n    )\n}\nexport default DialogItem","import s from '../DIalogs.module.css'\n\nconst Message =(props)=>{\n    return(\n        <div className={s.message}>\n            {props.message}\n        </div>\n    )\n}\nexport default Message","import s from './DIalogs.module.css'\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport Message from \"./Message/Message\";\nimport React from \"react\";\nimport {Navigate} from \"react-router-dom\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {Textarea} from \"../common/formsControl\";\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\nconst Dialogs = (props)=>{\n    let state= props.dialogsPage\n    let dialogsElements= state.dialogs.map(dialog=>\n        <DialogItem name={dialog.name} id={dialog.id} key={dialog.id}/>)\n    let messagesElements = state.messages.map(message=>\n        <Message message={message.message} key={message.id}/>)\n\n    let newMessageText= state.newMessageText;\n    let addNewMessage=(values)=>{\n        props.addMessage(values.newMessageText)\n\n    }\n\n    if(!props.isAuth) return <Navigate to={'/login'}/>\n\n    return(\n        <div className={s.dialogs}>\n            <div className={s.dialogsItems}>\n                {dialogsElements}\n            </div>\n            <div className={s.messages}>\n                <div>{messagesElements}</div>\n                <AddMessageReduxForm onSubmit={addNewMessage}/>\n            </div>\n\n        </div>\n    )\n}\nconst maxLength50=maxLengthCreator(50)\nconst AddMessageForm=(props)=>{\n    return(\n     <form onSubmit={props.handleSubmit}>\n        <div>\n            <Field component={Textarea} validate={[required,maxLength50]} name={'newMessageText'} placeholder={'Enter your message' }/>\n        </div>\n        <div>\n            <button>Send</button>\n        </div>\n    </form>)\n}\n\nconst AddMessageReduxForm= reduxForm({\n    form:\"dialogAddMessageForm\"\n})(AddMessageForm)\nexport  default Dialogs","import {addMessageActionCreator} from \"../../redux/dialogsReducer\";\nimport React from \"react\";\nimport Dialogs from \"./Dialogs\";\nimport {connect} from \"react-redux\";\nimport {withAuthRedirect} from \"../../hoc/WithAuthRedirect\";\nimport {compose} from \"redux\";\n\nlet mapStateToProps =(state)=>{\n    return{\n        dialogsPage: state.dialogsPage\n    }\n}\nlet mapDispatchToProps = (dispatch)=>{\n    return {\n        addMessage:(newMessageText)=>{\n            dispatch(addMessageActionCreator(newMessageText))}\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps,mapDispatchToProps),\n    withAuthRedirect\n)(Dialogs)\n"],"names":["props","_jsx","className","s","children","NavLink","to","id","_ref","isActive","name","message","maxLength50","maxLengthCreator","AddMessageReduxForm","reduxForm","form","_jsxs","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","state","dialogsPage","dialogsElements","dialogs","map","dialog","DialogItem","messagesElements","messages","Message","newMessageText","isAuth","values","addMessage","Navigate","compose","connect","dispatch","addMessageActionCreator","withAuthRedirect","Dialogs"],"sourceRoot":""}